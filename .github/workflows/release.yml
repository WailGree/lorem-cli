name: Publish Rust Binary (Matrix)

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build for ${{ matrix.os }} (${{ matrix.arch }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            arch: x86_64
            binary_name: lorem-cli
            asset_name: lorem-cli-linux-amd64
          - os: macos-latest
            target: x86_64-apple-darwin
            arch: x86_64
            binary_name: lorem-cli
            asset_name: lorem-cli-macos-amd64
          - os: macos-latest
            target: aarch64-apple-darwin
            arch: aarch64
            binary_name: lorem-cli
            asset_name: lorem-cli-macos-arm64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            arch: x86_64
            binary_name: lorem-cli.exe
            asset_name: lorem-cli-windows-amd64.exe

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Build binary
        run: cargo build --release --target ${{ matrix.target }}

      - name: Rename binary
        run: |
          mv target/${{ matrix.target }}/release/${{ matrix.binary_name }} ${{ matrix.asset_name }}
        shell: bash

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.asset_name }}
          path: ${{ matrix.asset_name }}

  publish:
    name: Publish Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: List downloaded files
        run: find artifacts -type f

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/*/*
          generate_release_notes: true
          make_latest: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
